//
// Created by Kaushik on 04/09/23.
//

#ifndef CUBIST_SECURITY_H
#define CUBIST_SECURITY_H

#include <vector>

#include "backtest_util.h"

#include "MinuteBarRecord.h"
#include "Fill.h"
#include "PortfolioSnapshot.h"
#include "WeekIntervalData.h"
#include "PnLRecord.h"

/*
 * Security class holds all the associated information related
 * to an instrument.
 *
 * In order to keep the memory usage of the application low,
 * all the data is load/stored/dumped on a weekly basis.
 *
 * This stores the following for every 1 minute interval :
 * - weekly market data information - price, spread, volume.
 * - any fills that got generated by the strategy.
 * - cash invested in this security and position.
 * - Finally based on the above, has logic to compute PnL.
 *
 * All the data members are private, and can only be touched by
 * Security Universe.
 */
class Security
{
private:
    Security() = delete;
    Security(SecurityId id) : security_id(id) {};

    /* Market Data related methods */
    bool addMarketData(MinuteBarRecord&& record);

    bool addMarketData(MinuteBarRecord& record);

    bool getMarketData(Time time, MinuteBarRecord& r) const;

    // Clean up the market data for this week.
    void postProcessMarketData();

    /* Fill Data related methods */

    bool addFill(Fill& record);

    bool addFill(Fill&& record);

    // (Dump&) Clean up the fill for this week.
    void postProcessFill(const std::string& file_name);

    /* cash, position and pnl related methods. */

    Quantity getLatestPosition() const;

    void postProcessPortfolio();

    void computePnL();

    bool getPnL(Time t, PnLRecord&) const;

    // Attributes

    SecurityId security_id;
    Week week; // week for which the data is currently being held.
    WeekIntervalData<MinuteBarRecord> market_data;
    WeekIntervalData<Fill> fills;
    WeekIntervalData<PortfolioSnapshot> portfolio;
    WeekIntervalData<PnLRecord> pnl;
    Price current_cash;
    Quantity current_position;
    PnL current_pnl;

    // Only allow SecurityUniverse to add/delete or do anything else.
    friend class SecurityUniverse;
};

#endif //CUBIST_SECURITY_H
